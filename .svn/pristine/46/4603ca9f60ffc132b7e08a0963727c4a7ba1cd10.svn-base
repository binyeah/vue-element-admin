<template>
    <div class="aboutyoga">
        <div class="content bg-f padding-24">
            <div class="top space-between">
                <div class="center-col left">
                    <div class="btn" :class="{current:cur==1}" @click="select(1)">功能介绍</div>
                    <div class="btn" :class="{current:cur==2}" @click="select(2)">常见问题</div>
                </div>
                <div class="add btn color-f bg-active" @click="add" v-if="cur==2">添加</div>
            </div>
            <div class="list" v-if="cur==2">
                <el-table :data="question" stripe border style="width: 100%">
                    <el-table-column type="index" width="100" label="序号">
                    </el-table-column>
                    <el-table-column label="问题" width="300">
                        <template slot-scope="scope">
                            <p>{{scope.row.question_title}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column label="回答" width="">
                        <template slot-scope="scope">
                            <p>{{scope.row.question_answer}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column label="操作" width="200" >
                        <template slot-scope="scope">
                            <div class="space-around">
                                <div class="btn active" @click="edit(scope.row)">编辑</div>
                                <div class="btn del" @click="del(scope.row.id)">删除</div>
                            </div>
                            
                        </template>
                    </el-table-column>
                </el-table>
                <el-pagination
                    @size-change="handleSizeChange"
                    @current-change="handleCurrentChange"
                    :page-size="10"
                    layout="total, prev, pager, next"
                    :total="total_page">
                </el-pagination>
            </div>
            
            <div class="addbox">
                <el-dialog title="添加问题" :visible.sync="addbox">
                    <div class="content">
                        <el-input v-model="title" placeholder="请输入问题"></el-input>
                        <el-input
                            type="textarea"
                            :rows="10"
                            placeholder="请输入回答"
                            v-model="textarea"
                            style="margin-top:20px">
                        </el-input>
                    </div>
                    <div slot="footer" class="dialog-footer">
                    <el-button @click="addbox = false">取 消</el-button>
                    <el-button type="primary" @click="sure()">确 定</el-button>
                    </div>
                </el-dialog>
            </div>
        </div>
    </div>
</template>
<script>
export default {
    data(){
        return{
            cur:1,
            total_page:1,
            addbox:false,
            title:'',
            textarea: '',
            id:'',
            question:[]
        }
    },
    created(){
        this.getquestion(1)
    },
    methods:{
        select(i){
            this.cur=i
        },
        getquestion(page){
            const url = this.$host + `admin/question`;
            //console.log(url)
            this.axios.get(url,{
               params:{
                    pageSize:10,
                    page:page,
                    
                }
              }).then(res=>{
                //console.log(res);
                if(res.status == 200){
                    let resData = res.data;
                    // this.$message({
                    //     message: '恭喜你，这是一条成功消息',
                    //     type: 'success'
                    // });
                    this.question=resData.result
                    this.total_page=resData.total_number
                }else{
                    this.$message.error('网络错误！请稍后重试！');
                }
              })
        },
        del(i){
            const url =  this.$host + `admin/question/delete_question`;
            var data = {
                'question_id': i,
            };
            //console.log(data)
            this.axios.post(url, data).then(res => {
                //console.log(res);
                var resData=res.data
                if(res.status==200){
                    if(resData.code==1){
                        this.$message({
                            message: resData.msg,
                            type: 'success'
                        });
                        this.getquestion(1)
                    }else{
                        this.$message({
                            message: resData.msg,
                            type: 'warning'
                        });
                    }
                    
                }else{
                    this.$message({
                        message: '网络错误！',
                        type: 'warning'
                    });
                }
                
            }).catch(error => {
                this.$message({
                    message: '网络错误！',
                    type: 'warning'
                });
                    // console.log(error);
            });
        },
        add(){
            this.title=''
            this.textarea=''
            this.id=''
            this.addbox=true
        },
        edit(i){
            this.id=i.id
            this.addbox=true
            this.title=i.question_title
            this.textarea=i.question_answer
            //console.log(i)
        },
        sure(){
            if(this.title==''){
                this.$message({
                    message: '问题不能为空！',
                    type: 'warning'
                });
                return
            }else if(this.textarea==''){
                 this.$message({
                    message: '问题答案不能为空！',
                    type: 'warning'
                });
                return
            }
            //console.log(this.imageUrl)
            const url =  this.$host + `admin/question/add_question`;
            var data = {
                'question_id': this.id,
                'question_title':this.title,
                'question_answer':this.textarea
            };
            //console.log(data)
            this.axios.post(url, data).then(res => {
                //console.log(res);
                var resData=res.data
                if(res.status==200){
                    if(resData.code==1){
                        this.$message({
                            message: '编辑成功！',
                            type: 'success'
                        });
                        this.addbox=false
                        this.getquestion(1)
                    }else{
                        this.$message({
                            message: '网络错误！',
                            type: 'warning'
                        });
                    }
                    
                }else{
                    this.$message({
                        message: '网络错误！',
                        type: 'warning'
                    });
                }
                
            }).catch(error => {
                this.$message({
                    message: '网络错误！',
                    type: 'warning'
                });
                    // console.log(error);
            });
           
        },
        handleSizeChange(val) {
            // console.log(`每页 ${val} 条`);
        },
        handleCurrentChange(val) {
            //console.log(`当前页: ${val}`);
            this.getquestion(val)
        },
    }
}
</script>
<style lang="scss">
.aboutyoga{
    .content{
        height: auto;
        .top{
            height: 80px;
            .left{
                font-size: 16px;
                div{
                    margin-right: 10px;
                    width: 106px;
                    height: 40px;
                    line-height: 40px;
                    border-radius: 8px;
                    color: #444;
                    border: 1px solid #e9e9e9;

                    text-align: center;

                }
                .current{
                    background-color: #1BA687;
                    color: #fff;
                    border: 1px solid #1BA687;
                }
            }
            .add{
                
                width: 87px;
                height: 30px;
                line-height: 30px;
                border-radius: 6px;
                
                text-align: center;
            }
        }
    }
}
</style>
