<template>
    <div class="classification">
        <div class="content bg-f padding-24">
            <div class="top space-between">
                <!-- <div class="center-col left">
                    <el-input placeholder=" 请输入您要搜索的内容" v-model="input"  style="width:250px">
                        <el-button slot="append" icon="el-icon-search" @click="serch()"></el-button>
                    </el-input>
                </div> -->
                <div class="color-r">（注：一级分类暂时只有三个）</div>
            </div>
            <div class="list">
                <table frame="box" rules="none" style="width:100%">
                    <thead>
                    <tr>
                        <th style="width:13%;">操作</th>
                        <th style="width:18%;">名称</th>
                        <th style="width:18%;">图片</th>
                        <th style="width:18%;">排序</th>
                        <th style="width:20%;">操作</th>
                    </tr>
                    </thead>
                    <tbody>
                        <tr id="1" v-for="(class_a,index) in goodsKindList" :key="index">
                            <td  @click="open(index,class_a.id)" v-if="class_a.value == 1"><i class="el-icon-plus"></i></td>
                            <td  @click="close(index,class_a.id)" v-if="class_a.value == 2"><i class="el-icon-minus"></i></td>
                            <td  v-if="class_a.value == 3"></td>
                            <td >{{class_a.cate_name}}</td>
                            <td >
                                <img :src="class_a.cate_cover" alt="" class="sq" v-if="class_a.value == 1||class_a.value == 2">
                            </td>
                            <td>
                                <input type="number" v-model="class_a.sort" @change="sorting(class_a)" >
                                
                            </td>
                            <td >
                                <div class="set" v-if="class_a.value == 1||class_a.value == 2">
                                    
                                    <span class="edit" @click="edit(class_a)">编辑</span>
                                    <span class="edit" @click="addson(class_a)">添加子分类</span>
                                    <span class="cancel" @click="del(class_a.id)">删除</span>
                                </div>
                                <div class="set" v-if="class_a.value == 3">
                                
                                    <span class="edit" @click="editson(class_a)">编辑</span>
                                    <span class="cancel" @click="del(class_a.id)">删除</span>
                                
                                </div>
                            </td>
                            </tr>
                    </tbody>
                </table> 
            </div>
            <div class="father">
                <el-dialog :title="title" :visible.sync="addfather">
                    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
                        <el-form-item label="父级分类" prop="faname" v-if="fakind">
                                <!-- <el-select v-model="ruleForm.faname" >
                                     <el-option  label="" value=""></el-option>
                                </el-select> -->
                            <el-input v-model="ruleForm.faname" style="width:250px"  disabled='disabled'></el-input>
                        </el-form-item>
                         <el-form-item label="分类名称" prop="name">
                            <el-input v-model="ruleForm.name" placeholder="最多5个字" style="width:250px" maxlength="5"></el-input>
                        </el-form-item>
                        <el-form-item label="分类图片" prop="img" v-if="fakind==false">
                            <el-upload
                                class="upload-demo"
                                action="https://test.izhixiu.cn/www/yoga/upload_file"
                                :on-success="handlePreview"
                                
                                :show-file-list="false"
                                list-type="picture">
                                <el-button size="small" type="primary">上传图片</el-button>
                            <div slot="tip" class="el-upload__tip" >（建议尺寸：110px*110px）</div>
                            <div v-if="imageUrl!=''">
                                <img :src="imageUrl" style="width:100px;height:100px" />
                            </div>
                            </el-upload> 
                        </el-form-item>
                    </el-form>
                    
                <div slot="footer" class="dialog-footer">
                    <el-button @click="addfather = false">取 消</el-button>
                    <el-button type="primary" @click="save(id)">确 定</el-button>
                </div>
                </el-dialog>
            </div>
        </div>
    </div>
</template>
<script>
export default {
    data(){
        return{
            input:'',
            disabled:true,
            noimg:require("../../assets/noImg.png"),
            goodsKindList:[],
            list_b:[],
            imageUrl:"",
            addfather: false,
            title:"编辑一级分类",
            fakind:true,
            list_b:[],
            kind:{},
            id:'',
            pid:'',
            ruleForm: {
                name: '',
                img:"",
                faname:"",
                publick:true,
            },
            rules: {
                name: [
                    { required: true, message: '请输入名称', trigger: 'blur' },
                    {max: 5, message: '名称不超过5 个字符', trigger: 'blur' }
                ],
                img: [
                    { required: true, message: '请上传分类图片', trigger: 'change' }
                ],
                faname: [
                    { required: true, message: '请选择父级名称', trigger: 'change' }
                ],
            },
            
        }
    },
    created(){
      this.getgoodsKindList()
   },
    methods:{
        //    获取分类列表
        getgoodsKindList(){
            const url=this.$host + `admin/cate`
                this.axios.get(url).then(res=>{
                //console.log(res.data)
                //this.total_page1 = res.data.total_page;
                this.goodsKindList = res.data.result;
                for(var i=0;i<this.goodsKindList.length;i++){
                    this.goodsKindList[i].value = 1;
                    if(this.goodsKindList[i].cate_cover==""||this.goodsKindList[i].cate_cover==null){
                        this.goodsKindList[i].cate_cover=this.noimg
                    }else{
                        this.goodsKindList[i].cate_cover=this.goodsKindList[i].cate_cover
                    }
                }
                }).catch(error=>{
                    console.log(error);
            })
        },
        open(index,id) {
            const url=this.$host + `admin/cate/show_child`;
            var data={
                    "pid":id,
                    }
                 //console.log(data)
            this.axios.post(url,data).then((response) => {
                //console.log(response.data)
                this.goodsKindList[index].value = 2;
                this.list_b = response.data.result;
                for (let i = 0;i<response.data.result.length; i++){
                    this.list_b[i].value = 3;
                    this.goodsKindList.splice(index+1,0,this.list_b[i])
                }
            });
        },//展开
        close(index,id){
            const url=this.$host + `admin/cate/show_child`;
            var data={
                    "pid":id,
                    }
                 //console.log(data)
            this.axios.post(url,data).then((response) => {
                //console.log(response.data)
                this.goodsKindList[index].value = 1;
                this.goodsKindList.splice(index+1,response.data.result.length);
                for (let i = 0;i<response.data.result.length; i++){
                    this.list_b[i].value = 3;
                }
            });
        },//收起
        // 获取子级
        getson(item){
            const url=this.$host + `/www/met/backend/goods_cate/show_child`;
            var data={
                    "pid":item.id,
                    }
                 //console.log(data)
            this.axios.post(url,data).then(res=>{
                   console.log(res.data)
            }).catch(error=>{
                    console.log(error);
            })
        },
        serch(){
            console.log(this.input)
        },
        // 排序
        sorting(item){
            const url=this.$host + `admin/cate/sorts`;
            var data={
                    "id":item.id,
                    "sort":item.sort,
                    }
                 //console.log(data)
            this.axios.post(url,data).then(res=>{
                    this.getgoodsKindList()
            }).catch(error=>{
                    console.log(error);
            })
        },
        
        // 删除分类
        del(item){
            const url=this.$host + `admin/cate/delete_cate`;
            var data={
                    "id":item
                    }
            this.axios.post(url,data).then(res=>{
                    console.log(res.data);
                    if(res.data.code==1){
                        this.$message({
                            message: res.data.msg,
                            type: 'success'
                        });
                         this.getgoodsKindList()
                    }else{
                        this.$message({
                        message: res.data.msg,
                        type: 'warning'
                        });
                    }
                   
            }).catch(error=>{
                    console.log(error);
            })
        },

        // 编辑一级
        edit(item){
            const url=this.$host + `admin/cate/edit_cate`;
            var data={
                    "id":item.id,
                    }
                 //console.log(data)
            this.axios.post(url,data).then(res=>{
                    console.log(res.data)
                    this.kind=res.data
                    this.addfather=true
                    this.title="编辑一级分类"
                    this.fakind=false

                    this.imageUrl=this.kind.cate_cover
                    this.ruleForm.name=this.kind.cate_name
                    this.id=this.kind.id
                    this.pid=0
            }).catch(error=>{
                    console.log(error);
            })
            
        },
        
        // 添加二级
        addson(item){
            console.log(item)
            this.ruleForm.faname=item.cate_name
            this.addfather=true
            this.title="添加二级分类"
            this.fakind=true
            this.imageUrl=""
            this.ruleForm.name=""
            this.id=""
            this.pid=item.id
        },
        exchange(){
            //console.log(this.ruleForm.publick)
        },
        // 编辑二级
        editson(item){
            const url=this.$host + `admin/cate/edit_cate`;
            var data={
                    "id":item.id,
                    }
                 //console.log(data)
            this.axios.post(url,data).then(res=>{
                    console.log(res.data)
                    this.kind=res.data
                    this.ruleForm.faname=this.kind.pcatename
                    this.addfather=true
                    this.title="编辑二级分类"
                    this.fakind=true
                    
                    this.id=this.kind.id
                    this.ruleForm.name=this.kind.cate_name
                    this.pid=this.kind.pid
            }).catch(error=>{
                    console.log(error);
            })
            
        },
        // 保存编辑
        save(item){
            if(this.pid!=0){
                this.imageUrl=''
            }
            const url=this.$host + `admin/cate/save_cate`;
            var data={
                    "id":item,
                    "cate_name":this.ruleForm.name,
                    "cate_cover":this.imageUrl,
                    "pid":this.pid,
                }
                 console.log(data)
            this.axios.post(url,data).then(res=>{
                    console.log(res.data)
                    var status=res.data.code
                    if(status==1){
                        this.$message({
                            message: res.data.message,
                            type: 'success'
                        });
                        this.addfather=false
                        this.imageUrl=""
                        this.getgoodsKindList()
                    }else{
                        this.$message({
                            message: res.data.message,
                            type: 'warning'
                        });
                    }
                    
            }).catch(error=>{
                    console.log(error);
            })
            
        },
        
        handlePreview(file) {
            //console.log(file);
            this.imageUrl=file.dest;  
        },
    }
}
</script>
<style lang="scss">
.classification{
    .content{
        height: auto;
        .top{
            height: 80px;
            .left{
                font-size: 16px;
            }
            
        }
        .list{
            table {
                   border:  1px solid #e9e9e9;
                    width: 100%;
                th {
                    border-top: 1px solid #e9e9e9;
                    border-right: 1px solid #e9e9e9;
                    height: 30px;
                    line-height: 30px;
                        text-align: center;
                }
                th:last-child {
                    border: none;
                }
                

                td {
                    text-align: center;
                    border-top: 1px solid #e9e9e9;
                    border-right: 1px solid #e9e9e9;
                    height: 60px;
                    input {
                        width: 50px;
                    }
                    i{
                        cursor: pointer;
                    }
                .set{
                    display: flex;
                    justify-content: space-around;
                    align-items: center;
                    height: 60px;
                }
                
                
                }
                td:last-child {
                    border-right: none;
                }
                .cancel {
                    cursor: pointer;
                    width: 70px;
                    height: 34px;
                    line-height: 34px;
                    border-radius: 6px;
                    color: #fff;
                    margin: 28px auto;
                    background-color: rgba(43, 51, 62, 1);
                    text-align: center;
                }
                .edit {
                    cursor: pointer;
                    width: 80px;
                    height: 34px;
                    line-height: 34px;
                    border-radius: 6px;
                    color: #fff;
                    margin: 28px auto;
                    background-color: #1ba687;
                    text-align: center;
                }
                .add {
                    cursor: pointer;
                    width: 100px;
                    height: 34px;
                    line-height: 34px;
                    border-radius: 6px;
                    color: #fff;
                    margin: 28px auto;
                    background-color: #1ba687;
                    text-align: center;
                }
            }
        }
    }
}
</style>
